import postcss from 'postcss';

const options = {
  preserve: true,
  replaceWith: '.focus-visible'
};

/** @type {(rule: CSSRule) => void} */

const onRule = rule => {
  const selector = rule.selector.replace(selectorRegExp, ($0, $1) => `${options.replaceWith}${$1}`);
  const clone = rule.clone({
    selector
  });
  if (options.preserve) rule.before(clone);else rule.replaceWith(clone);
};

const selectorRegExp = /(?<!\\):focus-visible([^\w-]|$)/gi;
/** @typedef {import('postcss').Rule} CSSRule */

/** @type {CSSPlugin} */

const plugin = postcss.plugin('postcss-focus-visible', opts => {
  opts = Object(opts);
  options.replaceWith = String(opts.replaceWith || '.focus-visible');
  options.preserve = Boolean('preserve' in opts ? opts.preserve : true);
  return root => {
    root.walkRules(selectorRegExp, onRule);
  };
});
/** @typedef {import('postcss').Plugin<options>} CSSPlugin */

export default plugin;
